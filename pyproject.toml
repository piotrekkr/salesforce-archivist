[tool.poetry]
name = "salesforce-archivist"
version = "0.1.0"
description = "Salesforce files archiving tool"
authors = ["piotrekkr <piotrekkr@users.noreply.github.com>"]
readme = "README.md"
packages = [
  { include = "salesforce_archivist", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.11"
simple-salesforce = "^1.12.5"
PyYAML = "^6.0.1"
click = "^8.1.7"
schema = "^0.7.5"
python-dateutil = "^2.8.2"
types-PyYAML = "^6.0.12.12"

[tool.poetry.group.dev.dependencies]
pytest-mock = "^3.12.0"
mypy = "^1.7.1"
pytest = "^7.4.3"
ruff = "^0.1.15"
types-requests = "^2.31.0.20240106"
poethepoet = "^0.24.4"

[tool.poetry.scripts]
archivist = 'salesforce_archivist.cli:cli'

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "test",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = "src"
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
no_implicit_optional = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
warn_return_any = true
warn_unused_ignores = true

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.poe.tasks.test]
help = "Run tests"
cmd  = "pytest ."

[tool.poe.tasks.lint-check]
help = "Check if code is linted"
cmd  = "ruff check"

[tool.poe.tasks.lint]
help = "Lint code"
cmd  = "ruff check --fix"

[tool.poe.tasks.format]
help = "Format code"
cmd  = "ruff format"

[tool.poe.tasks.format-check]
help = "Check code formating"
cmd  = "ruff format --check"

[tool.poe.tasks.mypy]
help = "Run static analysis"
cmd = "mypy"

[tool.poe.tasks.qt]
help = "Run code quality tools"
sequence  = ["format", "lint", "mypy"]
